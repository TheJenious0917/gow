version: "3"

services:
  xorg:
    restart: always
    build: 
      context: ./images/
      dockerfile: xorg/Dockerfile
    image: gameonwhales/xorg
    container_name: Armax_xorg
    network_mode: ${UDEVD_NETWORK}
    privileged: true
    volumes: 
      # Shared with Sunshine in order to get mouse and joypad working
      - /dev/input:/dev/input:ro
      - udev:/run/udev/:ro
      # The xorg socket, it'll be populated when up and running
      - ${XORG_SOCKET}:/tmp/.X11-unix
    ipc: ${XORG_IPC} # Needed for MIT-SHM, removing this should cause a performance hit see https://github.com/jessfraz/dockerfiles/issues/359
    environment: 
      DISPLAY: ${XORG_DISPLAY}
      RESOLUTION: ${XORG_RESOLUTION}
      CURRENT_OUTPUT: ${XORG_DISPLAY_PORT}
      REFRESH_RATE: ${XORG_REFRESH_RATE}
      FORCE_RESOLUTION: ${XORG_FORCE_RESOLUTION}

  pulse:
    restart: always
    build: 
      context: ./images/
      dockerfile: pulseaudio/Dockerfile
    image: gameonwhales/pulseaudio
    container_name: Armax_pulse
    ipc: ${XORG_IPC}
    volumes: 
      - ${PULSE_SOCKET_HOST}:${PULSE_SOCKET_GUEST}
  
  ####################
  # This is not really needed right now
  # It still relies on host udev
  # I'll keep it so that we can isolate services that needs udev
  # And it's good to log the events to debug Sunshine created devices
  udevd:
    restart: always
    build:
      context: ./images/
      dockerfile: udevd/Dockerfile
    image: gameonwhales/udevd
    container_name: Armax_udevd
    # Setting network to host
    # There must be a way to avoid this but I can't figure it out
    # We need to be on the host network in order to get the PF_NETLINK socket
    # You can listen to events even without that socket but Xorg and RetroArch will not pickup the devices
    network_mode: host
    privileged: true 
    volumes:
      - udev:/run/udev/

  sunshine:
    restart: always
    depends_on: 
      - xorg
      - pulse
    build: 
      context: ./images/
      dockerfile: sunshine/Dockerfile
      # Uncomment the following to override the default sunshine version
      # args:
      #  BUILD_TYPE: RELEASE # To debug run a console inside then gdb -args sunshine > r > on exception: bt
      #  SUNSHINE_SHA: d9f79527104694a223eb9d64309e9337f46909d6
    image: gameonwhales/sunshine
    container_name: Armax_sunshine
    ports: 
      - 47984-47990:47984-47990/tcp
      - 48010:48010
      - 47998-48000:47998-48000/udp
    runtime: ${DOCKER_RUNTIME}
    privileged: true
    volumes:
      # Xorg socket in order to get the screen
      - ${XORG_SOCKET}:/tmp/.X11-unix
      # Pulse socket, audio
      - ${PULSE_SOCKET_HOST}:${PULSE_SOCKET_GUEST}
      # Home directory: sunshine state + configs
      - ${local_state}/:/home/retro/
    ipc: ${SHARED_IPC}  # Needed for MIT-SHM, removing this should cause a performance hit see https://github.com/jessfraz/dockerfiles/issues/359
    environment:
      DISPLAY: ${XORG_DISPLAY}
      NVIDIA_DRIVER_CAPABILITIES: utility,video,graphics,display
      NVIDIA_VISIBLE_DEVICES: ${GPU_UUID}
      LOG_LEVEL: ${SUNSHINE_LOG_LEVEL}
      GOW_REQUIRED_DEVICES: /dev/uinput /dev/input/event* /dev/dri/*
      # Username and password for the web-ui at https://xxx.xxx.xxx.xxx:47990
      SUNSHINE_USER: ${SUNSHINE_USER}
      SUNSHINE_PASS: ${SUNSHINE_PASS}
      # Intel drivers, see https://wiki.debian.org/HardwareVideoAcceleration#Installation
      # LIBVA_DRIVERS_PATH: /usr/lib/x86_64-linux-gnu/dri/
      # LIBVA_DRIVER_NAME: i965 # or i965 for older generations
      XDG_RUNTIME_DIR: /tmp/.X11-unix
      PULSE_SERVER: ${PULSE_SERVER}
      TZ: $TZ

  #plexms:
  #  image: plexinc/pms-docker:latest
  #  container_name: Armax_PMS
  #  restart: unless-stopped
  #    #networks:
  #    #    - t2_proxy
  #    #devices:
  #    #    - /dev/dri:/dev/dri # for harware transcoding
  #  security_opt:
  #    - no-new-privileges:true
  #  ports:
  #    - "32400:32400/tcp"
  #    - "3005:3005/tcp"
  #    - "8324:8324/tcp"
  #    - "32469:32469/tcp"
  #    - "1900:1900/udp" 
  #    - "32410:32410/udp"
  #    - "32412:32412/udp"
  #    - "32413:32413/udp"
  #    - "32414:32414/udp"
  #  environment:
  #      TZ: $TZ
  #      HOSTNAME: "ArmaxArenaPMS"
  #      PLEX_UID: $PUID
  #      PLEX_GID: $PGID
  #      ALLOWED_NETWORKS: 172.20.20.0/24,172.16.0.0/13
  #  volumes:
  #    - $APPDIR/plexms/config:/config
  #    - /dev/shm:/transcode
  #    - RetroRoms:/media/roms
  #    - ~/gow/local_state/retroarch:/retroarch
#
  #tautulli:
  #  image: linuxserver/tautulli
  #  container_name: tautulli
  #  restart: unless-stopped
  #  environment:
  #    TZ: $TZ
  #    PUID: $PUID
  #    PGID: $PGID
  #  volumes:
  #    - $APPDIR/tautulli/config:/config
  #    - $APPDIR/plexms/config/Library/Application Support/Plex Media Server/Plug-ins/RetroArcher.bundle:/RetroArcher
  #  ports:
  #    - 8181:8181

  retroarch:
    restart: always
    depends_on:
      - xorg
      - pulse
      - sunshine
    runtime: ${DOCKER_RUNTIME}
    container_name: Armax_retroarch
    build:
      context: ./images/
      dockerfile: retroarch/Dockerfile
    image: gameonwhales/retroarch
    # network_mode: host
    privileged: true
    network_mode: ${UDEVD_NETWORK}
    volumes:
      # Followings are needed in order to get joystick support
      - /dev/input:/dev/input:ro
      - udev:/run/udev/:ro
      # Xorg socket in order to get the screen
      - ${XORG_SOCKET}:/tmp/.X11-unix
      # Pulse socket, audio
      - ${PULSE_SOCKET_HOST}:${PULSE_SOCKET_GUEST}
      # Home directory: retroarch games, downloads, cores etc
      - ${local_state}/:/home/retro/
      - RetroRoms:/home/retro/roms:rw
      # some emulators need more than 64 MB of shared memory - see https://github.com/libretro/dolphin/issues/222
      # TODO: why shm_size doesn't work ??????
      - type: tmpfs
        target: /dev/shm
        tmpfs:
            size: ${SHM_SIZE}
    ipc: ${SHARED_IPC}  # Needed for MIT-SHM, removing this should cause a performance hit see https://github.com/jessfraz/dockerfiles/issues/359
    environment:
      DISPLAY: ${XORG_DISPLAY}
      NVIDIA_DRIVER_CAPABILITIES: utility,video,graphics,display
      NVIDIA_VISIBLE_DEVICES: ${GPU_UUID}
      # Which devices does GoW need to be able to use? The docker user will be
      # added to the groups that own these devices, to help with permissions
      # issues
      # These values are the defaults, but you can add others if needed
      GOW_REQUIRED_DEVICES: /dev/uinput /dev/input/event* /dev/dri/* /dev/snd/*
      PULSE_SERVER: ${PULSE_SERVER}
      TZ: $TZ

####################
volumes:
  xorg: # This will hold the xorg socket file and it'll be shared between containers
  pulse: # This will hold the xorg socket
  udev: # This will hold shared udev files
  RetroRoms:
    name: RetroRoms
    driver: local
    driver_opts: 
      type: nfs
      o: vers=3,addr=ds920,rw
      device: ":/volume1/RetroPieRoms"